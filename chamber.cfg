[gcode_macro CHAMBER]
description: 
gcode:
  {% set temp = params.TEMP|default(0.0)|float %}
  {% if 'heater_generic chamber' in printer %}
	{action_respond_info("SET_HEATER_TEMPERATURE chamber: {0}".format(temp))}
    SET_HEATER_TEMPERATURE HEATER=chamber TARGET={temp}
  {% else %}
    {action_respond_info("heater_generic chamber does not exist")}
  {% endif %}
  
##SET_GCODE_VARIABLE MACRO=CHAMBER_REPORT VARIABLE=exhaust_end_speed VALUE=1
##UPDATE_DELAYED_GCODE ID=CHAMBER_COOLDOWN DURATION=0
[delayed_gcode CHAMBER_COOLDOWN]
gcode:
  {% set chamber_run_count = printer["gcode_macro CHAMBER_REPORT"].chamber_run_count %}
  {% set cooldown_delay = printer["gcode_macro CHAMBER_REPORT"].cooldown_delay|int %}
  {% set exhaust_end_speed = printer["gcode_macro CHAMBER_REPORT"].exhaust_end_speed %}
  {% set exhaust_off_bed = printer["gcode_macro global_vars"].exhaust_off_bed|default(40.0)|float %}
  {% set exhaust_off_chamber = printer["gcode_macro global_vars"].exhaust_off_chamber|default(35.0)|float %}
  {% set target_chamber = printer["heater_generic chamber"].target|float %}
  {% if 'temperature_sensor chamber' in printer %}
    {% set current_chamber = printer["temperature_sensor chamber"].temperature|float %}
  {% elif 'heater_generic chamber' in printer %}
    {% set current_chamber = printer["heater_generic chamber"].temperature|float %}
  {% else %}
	{action_respond_info("[heater_generic / temperature_sensor] chamber does not exist")}  
  {% endif %}
  {% if exhaust_end_speed == 0 and 'heater_generic chamber' in printer %}
  	SET_GCODE_VARIABLE MACRO=CHAMBER_REPORT VARIABLE=target_chamber VALUE={target_chamber}
    UPDATE_DELAYED_GCODE ID=CHAMBER_COOLDOWN_SLOW DURATION=5
  {% elif exhaust_end_speed == 0 %}
    {action_respond_info("exhaust_end_speed configured to 0 and no chamber_heater to slow cool, skipping CHAMBER_COOLDOWN macros")} 
  {% elif 'fan_generic exhaust_fan' in printer %}
    {% if current_chamber < exhaust_off_chamber and printer["heater_bed"].temperature < exhaust_off_bed %}
      {action_respond_info("{0} | chamber: {1}/{2} | bed: {3}/{4}, turning off exhaust fan".format((chamber_run_count / 7), current_chamber, exhaust_off_chamber, printer["heater_bed"].temperature, exhaust_off_bed))}
	  {action_respond_info("target temperature reached, turning off CHAMBER_COOLDOWN macro")}
	  EXHAUST_FAN SPEED=0
	  CHAMBER_RESET
    {% elif chamber_run_count == 1442 %}							# 720 run count * 5 seconds per loop is 1 hour
      {action_respond_info("{0} | 2 hour timeout | turning off CHAMBER_COOLDOWN macro".format(chamber_run_count / 7))}
	  CHAMBER TEMP=0
	  CHAMBER_RESET
    {% elif chamber_run_count == 0 %}
      {action_respond_info("delay CHAMBER_COOLDOWN {0} seconds".format(cooldown_delay))}
      G4 P{cooldown_delay * 1000}
      EXHAUST_FAN SPEED={exhaust_end_speed}
      CHAMBER_REPORT CURRENT_CHAMBER={current_chamber} EXHAUST_OFF_CHAMBER={exhaust_off_chamber} EXHAUST_OFF_BED={exhaust_off_bed}
	  UPDATE_DELAYED_GCODE ID=CHAMBER_COOLDOWN DURATION=5
    {% elif printer['fan_generic exhaust_fan'].speed != exhaust_end_speed %}
      {action_respond_info("exhaust_end_speed modified, turning off CHAMBER_COOLDOWN macro")}
	  CHAMBER_RESET
    {% else %}
      CHAMBER_REPORT CURRENT_CHAMBER={current_chamber} EXHAUST_OFF_CHAMBER={exhaust_off_chamber} EXHAUST_OFF_BED={exhaust_off_bed}
      UPDATE_DELAYED_GCODE ID=CHAMBER_COOLDOWN DURATION=5
	{% endif %}
  {% else %}
    {action_respond_info("exhaust_fan does not exist")}
    CHAMBER_RESET
  {% endif %}

##UPDATE_DELAYED_GCODE ID=CHAMBER_COOLDOWN_SLOW DURATION=0
[delayed_gcode CHAMBER_COOLDOWN_SLOW]
gcode:
  {% set cooldown_delay = printer["gcode_macro CHAMBER_REPORT"].cooldown_delay|int %}
  {% set chamber_run_count = printer["gcode_macro CHAMBER_REPORT"].chamber_run_count %}
  {% set current_chamber = printer["heater_generic chamber"].temperature|float %}
  {% set target_chamber = printer["heater_generic chamber"].target|float %}
  {% if 'heater_generic chamber' not in printer %}
    {action_respond_info("No chamber heater to use for slow cooldown, skipping")}
    UPDATE_DELAYED_GCODE ID=CHAMBER_COOLDOWN_SLOW DURATION=0
  {% endif %}

  {% if target_chamber != printer["gcode_macro CHAMBER_REPORT"].target_chamber %}
    {action_respond_info("Chamber temp modified, stopping CHAMBER_COOLDOWN_SLOW macro")}
    CHAMBER_RESET
  {% endif %}

  {% if printer["heater_generic chamber"].target <= 22 %}
    {action_respond_info("finished chamber_cooldown_slow")}
    CHAMBER TEMP=0
	TURN_OFF_HEATERS
	UPDATE_DELAYED_GCODE ID=CHAMBER_COOLDOWN_SLOW DURATION=0
  {% elif chamber_run_count < (cooldown_delay/5) %}
    {action_respond_info("cooldown, waiting. {0} of {1}".format(chamber_run_count, (cooldown_delay/5)|int))}
    CHAMBER_REPORT_SLOW
	UPDATE_DELAYED_GCODE ID=CHAMBER_COOLDOWN_SLOW DURATION=5
  {% elif chamber_run_count % 24 == 0 %}
  	SET_GCODE_VARIABLE MACRO=CHAMBER_REPORT VARIABLE=target_chamber VALUE={target_chamber - 1}
    CHAMBER TEMP={target_chamber - 1}
    CHAMBER_REPORT_SLOW
    UPDATE_DELAYED_GCODE ID=CHAMBER_COOLDOWN_SLOW DURATION=5
  {% else %}
    CHAMBER_REPORT_SLOW
    UPDATE_DELAYED_GCODE ID=CHAMBER_COOLDOWN_SLOW DURATION=5
  {% endif %}

[gcode_macro CHAMBER_REPORT]
variable_chamber_loop_count: 0
variable_chamber_run_count: 0
variable_cooldown_delay: 0
variable_exhaust_end_speed: 1
variable_target_chamber: 0.0
gcode:   
  {% set exhaust_off_chamber = params.EXHAUST_OFF_CHAMBER|default(35.0)|float %}
  {% set exhaust_off_bed = params.EXHAUST_OFF_BED|default(40.0)|float %}
  {% set current_chamber = params.CURRENT_CHAMBER|float %}
  SET_GCODE_VARIABLE MACRO=CHAMBER_REPORT VARIABLE=chamber_run_count VALUE={chamber_run_count + 1}
  {% if chamber_loop_count == 6 %}
    {action_respond_info("{0} | chamber: {1}/{2} | bed: {3}/{4}, continue slow cooldown".format("{:03d}".format((chamber_run_count / 7)|int),"{:05.2f}".format(current_chamber),"{:05.2f}".format(exhaust_off_chamber),"{:05.2f}".format(printer["heater_bed"].temperature),"{:05.2f}".format(exhaust_off_bed)))}
	SET_GCODE_VARIABLE MACRO=CHAMBER_REPORT VARIABLE=chamber_loop_count VALUE=0
  {% else %}
    SET_GCODE_VARIABLE MACRO=CHAMBER_REPORT VARIABLE=chamber_loop_count VALUE={chamber_loop_count + 1}
  {% endif %}

[gcode_macro CHAMBER_REPORT_SLOW]
gcode:   
  {% set chamber_run_count = printer["gcode_macro CHAMBER_REPORT"].chamber_run_count %}
  SET_GCODE_VARIABLE MACRO=CHAMBER_REPORT VARIABLE=chamber_run_count VALUE={chamber_run_count + 1}
  {% if printer["gcode_macro CHAMBER_REPORT"].chamber_loop_count == 6 %}
    {action_respond_info("{0} | chamber: {1}/{2} | bed: {3}/{4}, slow chamber cooling".format("{:03d}".format((chamber_run_count / 7)|int),"{:05.2f}".format(printer["heater_generic chamber"].temperature),"{:05.2f}".format(printer["heater_generic chamber"].target),"{:05.2f}".format(printer["heater_bed"].temperature),"{:05.2f}".format(printer["heater_bed"].target)))}
	SET_GCODE_VARIABLE MACRO=CHAMBER_REPORT VARIABLE=chamber_loop_count VALUE=0
  {% else %}
    SET_GCODE_VARIABLE MACRO=CHAMBER_REPORT VARIABLE=chamber_loop_count VALUE={printer["gcode_macro CHAMBER_REPORT"].chamber_loop_count + 1}
  {% endif %}


[gcode_macro EXHAUST_OFF]
gcode:
  SET_FAN_SPEED FAN=exhaust_fan SPEED=0

[gcode_macro CHAMBER_RESET]
gcode:
  SET_GCODE_VARIABLE MACRO=CHAMBER_REPORT VARIABLE=chamber_loop_count VALUE=0
  SET_GCODE_VARIABLE MACRO=CHAMBER_REPORT VARIABLE=exhaust_end_speed VALUE=0
  SET_GCODE_VARIABLE MACRO=CHAMBER_REPORT VARIABLE=cooldown_delay VALUE=0
  SET_GCODE_VARIABLE MACRO=CHAMBER_REPORT VARIABLE=chamber_run_count VALUE=0
  UPDATE_DELAYED_GCODE ID=CHAMBER_COOLDOWN DURATION=0
  UPDATE_DELAYED_GCODE ID=CHAMBER_COOLDOWN_SLOW DURATION=0
  EXHAUST_FAN SPEED=0